#!/bin/bash

# --- Configuration ---
DEFAULT_LENGTH=16

# Define character sets
LOWER="abcdefghijklmnopqrstuvwxyz"
UPPER="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
NUMBERS="0123456789"
SYMBOLS="!@#$%^&*()_+-="

# Combine all sets for the master set
ALL_CHARS="$LOWER$UPPER$NUMBERS$SYMBOLS"

# --- Input Processing (using getopts for robustness) ---
LENGTH=$DEFAULT_LENGTH
while getopts "l:h" OPT; do
    case $OPT in
        l)
            # Check if argument is a valid number and greater than 4
            if [[ "$OPTARG" =~ ^[0-9]+$ ]] && [ "$OPTARG" -ge 4 ]; then
                LENGTH=$OPTARG
            else
                echo "Error: Length must be a number greater than 4." >&2
                exit 1
            fi
            ;;
        h)
            echo "Usage: $0 [-l <length>]"
            echo "  -l : Specify desired password length (default: 16)."
            exit 0
            ;;
        \?)
            echo "Error: Invalid option. Use -h for help." >&2
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

# --- Generation Function ---
generate_password() {
    # /dev/urandom is the non-blocking source of cryptographic randomness
    # tr -dc: delete all characters NOT in the specified set (i.e., keep only these)
    # head -c $LENGTH: limit the output to the required length
    
    cat /dev/urandom | tr -dc "$ALL_CHARS" | head -c "$LENGTH"
}

# --- Main Execution ---
echo "Generating secure password (Length: $LENGTH)..."
PASSWORD=$(generate_password)

echo "----------------------------------------"
echo "Generated Password: $PASSWORD"
echo "----------------------------------------"
