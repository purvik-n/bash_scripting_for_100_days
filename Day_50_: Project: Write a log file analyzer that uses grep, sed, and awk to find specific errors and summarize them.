#!/usr/bin/env bash
LOGFILE="${1:-/var/log/syslog}"
PATTERN="${2:-error|failed|exception|critical|panic|warn}"
[ -r "$LOGFILE" ] || { echo "Cannot read $LOGFILE"; exit 1; }
echo "Analyzing: $LOGFILE (pattern: $PATTERN)"
LINES=$(grep -i -E "$PATTERN" "$LOGFILE" | tee /tmp/log.$$)
echo "Matches: $(wc -l < /tmp/log.$$)"
echo "----------------------------------"
awk 'BEGIN{IGNORECASE=1}
     /critical/ {c++} /error/ {e++} /warn|warning/ {w++}
     /exception/ {x++} /failed/ {f++}
     END{printf "CRITICAL:%d ERROR:%d WARN:%d EXCEPTION:%d FAILED:%d\n",c,e,w,x,f}'
/tmp/log.$$
echo; echo "Top 10 messages:"
sed -E 's/[0-9-]+ [0-9:,.]+//; s/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/IPADDR/; s/ID=[0-9]+
/ID=/; s/[0-9A-Fa-f]{8,}/HEX/' /tmp/log.$$ \
 | sed 's/^[[:space:]]*//' | sort | uniq -c | sort -nr | head -n 10 | tee /tmp/top.$$
echo;
echo "Per-hour timeline:"
awk '{if(match($0,/^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}/)) print substr($0,RSTART,13)}' /tmp/log.$$ \
 | sort | uniq -c | sort
echo;
echo "Examples (up to 5) for top 3:"
head -n 3 /tmp/top.$$ | awk '{$1="";print substr($0,2)}' | while read p; do
  echo "---- $p ----"
  grep -i -F "$p" /tmp/log.$$ | head -n 5
done
rm -f /tmp/log.$$ /tmp/top.$$
