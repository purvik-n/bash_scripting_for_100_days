#!/bin/bash

# --- Configuration ---
# Source directory where your dotfiles are stored (the Git repo)
DOTFILES_DIR="$HOME/dotfiles" 

# Array of files to be linked (should match names in DOTFILES_DIR)
FILES_TO_LINK=(".bashrc" ".vimrc" ".gitconfig" ".tmux.conf")

echo "--- Dotfiles Linking Script ---"

# Check if the dotfiles repository exists
if [ ! -d "$DOTFILES_DIR" ]; then
    echo "ERROR: Dotfiles directory $DOTFILES_DIR not found."
    echo "Please clone your repository first: git clone <URL> $DOTFILES_DIR"
    exit 1
fi

# --- Main Linking Loop ---
for file in "${FILES_TO_LINK[@]}"; do
    
    SOURCE_FILE="$DOTFILES_DIR/$file"
    TARGET_LINK="$HOME/$file"
    
    echo "Processing $file..."

    # 1. Check if the source file exists in the repo
    if [ ! -f "$SOURCE_FILE" ]; then
        echo "  [SKIP] Source file $SOURCE_FILE not found in repository."
        continue
    fi
    
    # 2. Check if a link already exists
    if [ -L "$TARGET_LINK" ]; then
        echo "  [INFO] Link already exists. Skipping."
        continue
    fi
    
    # 3. Handle existing file (back up if necessary)
    if [ -f "$TARGET_LINK" ]; then
        echo "  [WARNING] Existing file found. Backing up $file to $file.bak"
        mv "$TARGET_LINK" "$TARGET_LINK.bak"
    fi
    
    # 4. Create the symbolic link
    ln -s "$SOURCE_FILE" "$TARGET_LINK"
    
    if [ $? -eq 0 ]; then
        echo "  [SUCCESS] Linked $file to $DOTFILES_DIR"
    else
        echo "  [FAILURE] Could not create link for $file."
    fi

done

echo "--- Linking Complete. Restart your shell to apply changes. ---"
