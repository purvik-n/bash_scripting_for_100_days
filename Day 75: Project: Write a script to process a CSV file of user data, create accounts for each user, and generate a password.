#!/bin/bash

# --- Configuration ---
USERS_FILE="new_users.csv"
PASSWORD_LOG="passwords_$(date +%Y%m%d).log"
DELIMITER=,
GROUP_PREFIX="dept_"

# Check for root privilege
if [ "$EUID" -ne 0 ]; then
    echo "ERROR: Please run this script with sudo or as root to manage user accounts."
    exit 1
fi

# --- Data Setup: Create a sample CSV file ---
cat << EOF > "$USERS_FILE"
username,fullname,department
jdoe,John Doe,Sales
asmith,Alice Smith,IT
cwhite,Charlie White,HR
EOF

echo "--- User Creation Log: $(date) ---" > "$PASSWORD_LOG"
echo "Username,Password" >> "$PASSWORD_LOG"
echo "Processing users from $USERS_FILE..."

# --- Function to generate a strong random password ---
generate_password() {
    # Generates a 12-character base64 string, converts to hex, and shortens
    openssl rand -base64 12 | tr -d '/+' | cut -c1-12
}

# --- Main Processing Loop ---
# Skip header line (tail -n +2) and use IFS=, for CSV parsing
tail -n +2 "$USERS_FILE" | while IFS="$DELIMITER" read -r USERNAME FULLNAME DEPT; do

    # Trim any leading/trailing whitespace using parameter expansion
    USERNAME="${USERNAME//[[:space:]]/}"
    DEPT="${DEPT//[[:space:]]/}"

    # 1. Validation Check
    if [ -z "$USERNAME" ] || [ -z "$FULLNAME" ] || [ -z "$DEPT" ]; then
        echo "WARNING: Skipping line due to empty field."
        continue
    fi

    # 2. Group Check/Creation
    GROUP_NAME="${GROUP_PREFIX}${DEPT}"
    if ! getent group "$GROUP_NAME" &> /dev/null; then
        groupadd "$GROUP_NAME"
        echo "   -> Created group: $GROUP_NAME"
    fi

    # 3. User Creation
    if id "$USERNAME" &> /dev/null; then
        echo "   -> User $USERNAME already exists. Skipping creation."
        continue
    fi
    
    # Create the user: -m (create home dir), -G (add to group)
    useradd -m -g "$GROUP_NAME" -c "$FULLNAME" "$USERNAME"
    
    if [ $? -eq 0 ]; then
        # 4. Password Generation and Setting
        NEW_PASS=$(generate_password)
        
        # Set the password securely via chpasswd
        echo "$USERNAME:$NEW_PASS" | chpasswd
        
        # Log the password (ONLY for temporary admin use)
        echo "$USERNAME,$NEW_PASS" >> "$PASSWORD_LOG"
        echo "SUCCESS: Created user $USERNAME (Group: $GROUP_NAME)"
    else
        echo "FAILURE: Could not create user $USERNAME."
    fi

done

echo ""
echo "--- Script Finished ---"
echo "IMPORTANT: Temporary passwords saved to $PASSWORD_LOG."
echo "Secure this file immediately, then delete it after distribution!"

# Cleanup the CSV source file
rm "$USERS_FILE"
