#!/bin/bash

# --- Configuration ---
APP_DIR="/var/www/my_app"
GIT_REPO="git@github.com:myorg/my_app.git" # Example Git URL
SERVICE_NAME="app_worker"                  # The Systemd service name
LOG_FILE="/tmp/deployment_$(date +%Y%m%d%H%M).log"

# --- Function to check command success ---
check_status() {
    if [ $? -ne 0 ]; then
        echo "ERROR: $1 failed. Check $LOG_FILE for details." | tee -a "$LOG_FILE"
        exit 1
    fi
}

# --- Main Deployment Steps ---

echo "Starting deployment..." | tee "$LOG_FILE"

# 1. Ensure the directory exists
if [ ! -d "$APP_DIR" ]; then
    echo "Cloning repository into $APP_DIR..." | tee -a "$LOG_FILE"
    git clone "$GIT_REPO" "$APP_DIR" 2>&1 | tee -a "$LOG_FILE"
    check_status "Git Clone"
fi

# 2. Update code and dependencies
echo "Pulling latest code and checking out main branch..." | tee -a "$LOG_FILE"
cd "$APP_DIR" || check_status "Change Directory"

git pull origin main 2>&1 | tee -a "$LOG_FILE"
check_status "Git Pull"

# 3. Simulate Build/Install Step
echo "Running dependencies install/build..." | tee -a "$LOG_FILE"
# In a real scenario, this might be: npm install or composer install
sleep 2 # Simulation
echo "Build step completed successfully." | tee -a "$LOG_FILE"

# 4. Restart the Application Service
echo "Restarting application service: $SERVICE_NAME..." | tee -a "$LOG_FILE"
sudo systemctl restart "$SERVICE_NAME" 2>&1 | tee -a "$LOG_FILE"
check_status "Service Restart"

echo "Deployment finished successfully to $APP_DIR." | tee -a "$LOG_FILE"
